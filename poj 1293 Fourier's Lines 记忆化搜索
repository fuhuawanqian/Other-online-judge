Description:
Joseph Fourier was a great mathematician and physicist and is well known for his mathematic series.
Among all the nineteen children in his family, Joseph was the youngest and the smartest.
He began to show his interest in mathematics when he was very young. 
After he grew up, he often corresponded with C. Bonard (a professor of mathematics at Auxerre) by exchanging letters. 
In one letter written to Bonard, Fourier asked a question:
how to draw 17 lines on a plane to make exactly 101 crossings, where each crossing belongs to exactly two lines. 
Obviously, this is an easy problem, and Figure-1 is a solution that satisfies his requirement. 
Now the problem for you is a universal one.
Can we draw N lines on a plane to make exactly M crossings, where each crossing belongs to exactly two lines?
If we can, how many pieces, at most, can these lines cut the plane into? 

Input
The input may have several sets of test data. 
Each set is one line containing two integers N and M (1 <= N <= 100, 0 <= M <= 10000), separated by a space. 
The test data is followed by a line containing two zeros, which indicates the end of input and should not be processed as a set of data.

Output
Output one line for each set of input in the following format: 
Case i: N lines cannot make exactly M crossings. 
if the drawing of these lines is impossible; 
or: 
Case i: N lines with exactly M crossings can cut the plane into K pieces at most. 
Note: Even if N or M equals to one, you should use the words "lines" and "crossings" in your output.

Sample Input
4 3
4 6
4 2
5 11
17 101
0 0

Sample Output
Case 1: 4 lines with exactly 3 crossings can cut the plane into 8 pieces at most.
Case 2: 4 lines with exactly 6 crossings can cut the plane into 11 pieces at most.
Case 3: 4 lines cannot make exactly 2 crossings.
Case 4: 5 lines cannot make exactly 11 crossings.
Case 5: 17 lines with exactly 101 crossings can cut the plane into 119 pieces at most. 

基本思路：
1)在意识到动态规划之前，应首先想到这应该是一道规律题，所以应该仔细观察样例的规律，区域数=n+m+1
2)然后至于可不可行，根据实际模拟应该想到记忆化搜索，想到dp[n][m]=check(n-i,m-i*(n-i)),问题得到解决

代码如下：
#include<cstdio>
#include<cstring>

using namespace std;

const int maxn = 10000+10;
int dp[maxn/100+10][maxn];

int check(int n,int m){
    if(m&&( m<n-1 || m>n*(n-1)/2 )) return 0;
    if(m==0) return 1;
    if(dp[n][m]!=-1) return dp[n][m];
    dp[n][m]=0;
    for(int i=1;i<=n;i++) dp[n][m]|=check(n-i,m-i*(n-i));
    return dp[n][m];
}
int main(){
    memset(dp,-1,sizeof(dp));
    int cas=0,n,m;
    while(~scanf("%d%d",&n,&m)){
        ++cas;
        if(n==0) break;
        if(check(n,m)) printf("Case %d: %d lines with exactly %d crossings can cut the plane into %d pieces at most.\n",cas,n,m,n+m+1);
        else printf("Case %d: %d lines cannot make exactly %d crossings.\n",cas,n,m);
    }
    return 0;
}

